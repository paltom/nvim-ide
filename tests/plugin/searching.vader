Given (Some text in buffer):
  Line 1
  Pattern
  Line 3

Do (Search for 'pattern'):
  /pattern\<cr>

Then (Cursor should be in line with 'Pattern'):
  AssertEqual [2, 1], getcurpos()[1:2]

Do (Search for 'Pattern'):
  /Pattern\<cr>

Then (Cursor should be in line with 'Pattern'):
  AssertEqual [2, 1], getcurpos()[1:2]

Execute (Searching for 'PATTERN' should not yield any results):
  AssertThrows /PATTERN

Do (Search for pattern):
  /pattern\<cr>

Then (Search results are not highlighted after searching):
  AssertEqual 0, &hlsearch

Execute (Prepare):
  autocmd CmdLineChanged /,\? let test_hls = &hlsearch

Do (Search for partial pattern):
  /pat

Then (Search results are highlighted during search):
  AssertEqual 1, test_hls

Do (Mark and search for first word):
  viw
  /

Then (Second matching word is selected):
  AssertEqual [3, 1], getcurpos()[1:2]

Do (Start visual mode and go to the pattern):
  v
  g/pattern\<cr>
# remember positions
  :\<c-u>let g:test_curpos = getcurpos()[1:2]\<cr>
  :\<c-u>let g:test_vstart = getpos("'<")[1:2]\<cr>
  :\<c-u>let g:test_vend = getpos("'>")[1:2]\<cr>

Then (Cursor is at the beginning of pattern and whole area is visually selected):
  AssertEqual [1, 1], g:test_curpos
  AssertEqual [1, 1], g:test_vstart
  AssertEqual [2, 1], g:test_vend
